module Texts.MiscCode exposing (..)


corpus =
    { monosize = 0.5
    , name = "Code"
    , words = words
    }


words =
    """git
status
origin
push
pull
cd
ls
mkdir
rebase
develop
master
main
trunk
feature
function
()
=>
<|
|>
console
table
log
type
interface
class
object
return
int
float
string
def
end
if
else
cond
while
filter
find
reduce
map
true
false
->
<<
>>
||
&&
+=
-=
1
entries
keys
values
set
sort
min
max
first
last
take
drop
takeWhile
dropWhile
group
type alias
def
defn
module
grep
lsof
tcp:3000
://
http
pull
push
rebase
-i
-a
--fixup
--amend
--global
--autosquash
config
curl
wget
chmod
bin/start
make
install
yarn
npm
tsc
node
localhost
<div>
<script>
body
document
element
query
connect
import
require
print
exit
__main__
__name__
logger
error
info
warn
debug
throw
catch
raise
#()
#!/bin/sh
export
const
let
var
mut
:=
==
===
!=
!==
|
&
?
:
0
enum
...
!
`
${}
#{}
//
/**
()
select
delete
update
from
with
id
using
index
model
domain
controller
event
:wq
""
''
printf
acc
memo
identity
char
void
args
opts
default
::
[0]
iter
recur
npx
jest
nvm
psql
docker
brew
join
split
flatmap
,
+
=
-
_
>
<
!
#
%
[
]
{
}
T
as
exposing
public
private
protected
pub
fn
fun
proc
test
it
describe
expect
assert
contains
includes
display
block
inline
flex
hidden
add
--dev
env
production
staging
io
core
std
async
await
"""
